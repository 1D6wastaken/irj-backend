// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: medias.sql

package queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createNewMedia = `-- name: CreateNewMedia :one
INSERT INTO t_medias(titre_media, chemin_media, date_creation)
VALUES ($1, $2, $3)
RETURNING id_media
`

type CreateNewMediaParams struct {
	Title        pgtype.Text
	CheminMedia  pgtype.Text
	DateCreation pgtype.Text
}

func (q *Queries) CreateNewMedia(ctx context.Context, arg CreateNewMediaParams) (int32, error) {
	row := q.db.QueryRow(ctx, createNewMedia, arg.Title, arg.CheminMedia, arg.DateCreation)
	var id_media int32
	err := row.Scan(&id_media)
	return id_media, err
}

const findRawMediaCheminByID = `-- name: FindRawMediaCheminByID :one
SELECT chemin_media
FROM t_medias
WHERE id_media = $1
LIMIT 1
`

func (q *Queries) FindRawMediaCheminByID(ctx context.Context, idMedia int32) (pgtype.Text, error) {
	row := q.db.QueryRow(ctx, findRawMediaCheminByID, idMedia)
	var chemin_media pgtype.Text
	err := row.Scan(&chemin_media)
	return chemin_media, err
}
