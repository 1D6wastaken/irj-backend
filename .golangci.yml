version: "2"
sort-order:
  - file
  - linter
  - severity
linters:
  default: all
  disable:
    - asciicheck
    - bodyclose
    - dupl
    - err113
    - exhaustruct
    - forcetypeassert
    - gochecknoglobals
    - gocognit
    - godot
    - godox
    - gomoddirectives
    - gosmopolitan
    - ireturn
    - misspell
    - mnd
    - nestif
    - noinlineerr
    - prealloc
    - testpackage
    - varnamelen
    - wrapcheck
    - wsl
  settings:
    depguard:
      rules:
        logger:
          deny:
            - pkg: github.com/sirupsen/logrus
              desc: logging is allowed only by logutils.Log
    dupl:
      threshold: 100
    funlen:
      lines: -1
      statements: 50
    goconst:
      min-len: 2
      min-occurrences: 3
    gocritic:
      disabled-checks:
        - dupImport
        - ifElseChain
        - octalLiteral
        - whyNoLint
        - unnamedResult
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    gocyclo:
      min-complexity: 15
    govet:
      settings:
        printf:
          funcs:
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
            - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
    lll:
      line-length: 140
    misspell:
      locale: US
    mnd:
      checks:
        - argument
        - case
        - condition
        - return
      ignored-numbers:
        - "0"
        - "1"
        - "2"
        - "3"
      ignored-functions:
        - strings.SplitN
    nolintlint:
      require-explanation: false
      require-specific: false
      allow-unused: false
    revive:
      rules:
        - name: unexported-return
          disabled: true
        - name: unused-parameter
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - dupl
          - goconst
          - lll
        path: (.+)_test\.go
      - linters:
          - dupl
        path: pkg/golinters
      - linters:
          - staticcheck
        path: pkg/golinters/errcheck.go
        text: 'SA1019: errCfg.Exclude is deprecated: use ExcludeFunctions instead'
      - linters:
          - staticcheck
        path: pkg/commands/run.go
        text: 'SA1019: lsc.Errcheck.Exclude is deprecated: use ExcludeFunctions instead'
      - linters:
          - staticcheck
        path: pkg/commands/run.go
        text: 'SA1019: c.cfg.Run.ShowStats is deprecated: use Output.ShowStats instead.'
      - path: pkg/golinters/govet.go
        text: 'SA1019: cfg.CheckShadowing is deprecated: the linter should be enabled inside `Enable`.'
      - path: pkg/commands/config.go
        text: 'SA1019: cfg.Run.UseDefaultSkipDirs is deprecated: use Issues.UseDefaultExcludeDirs instead.'
      - linters:
          - staticcheck
        path: pkg/golinters/godot.go
        text: 'SA1019: settings.CheckAll is deprecated: use `Scope` instead'
      - linters:
          - staticcheck
        path: pkg/golinters/gofumpt.go
        text: 'SA1019: settings.LangVersion is deprecated: use the global `run.go` instead.'
      - linters:
          - staticcheck
        path: pkg/golinters/staticcheck_common.go
        text: 'SA1019: settings.GoVersion is deprecated: use the global `run.go` instead.'
      - linters:
          - staticcheck
        path: pkg/lint/lintersdb/manager.go
        text: 'SA1019: (.+).(GoVersion|LangVersion) is deprecated: use the global `run.go` instead.'
      - linters:
          - gocritic
        path: pkg/golinters/unused.go
        text: 'rangeValCopy: each iteration copies 160 bytes \(consider pointers or indexing\)'
    paths:
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gofmt
    - goimports
  exclusions:
    generated: lax
    paths:
      - .*\_test.go$
      - .cache
      - third_party$
      - builtin$
      - examples$
