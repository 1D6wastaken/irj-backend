// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserLogin user login
//
// swagger:model UserLogin
type UserLogin struct {

	// token
	// Required: true
	Token *string `json:"token"`

	// token type
	// Required: true
	// Enum: ["Bearer"]
	TokenType *string `json:"token_type"`

	// Expiration time in hours
	// Required: true
	ExpiresIn *float64 `json:"expires_in"`

	// First name
	// Required: true
	Firstname *string `json:"firstname"`
}

// Validate validates this user login
func (m *UserLogin) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTokenType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExpiresIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstname(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserLogin) validateToken(formats strfmt.Registry) error {

	if err := validate.Required("token", "body", m.Token); err != nil {
		return err
	}

	return nil
}

var userLoginTypeTokenTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Bearer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userLoginTypeTokenTypePropEnum = append(userLoginTypeTokenTypePropEnum, v)
	}
}

const (

	// UserLoginTokenTypeBearer captures enum value "Bearer"
	UserLoginTokenTypeBearer string = "Bearer"
)

// prop value enum
func (m *UserLogin) validateTokenTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, userLoginTypeTokenTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UserLogin) validateTokenType(formats strfmt.Registry) error {

	if err := validate.Required("token_type", "body", m.TokenType); err != nil {
		return err
	}

	// value enum
	if err := m.validateTokenTypeEnum("token_type", "body", *m.TokenType); err != nil {
		return err
	}

	return nil
}

func (m *UserLogin) validateExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("expires_in", "body", m.ExpiresIn); err != nil {
		return err
	}

	return nil
}

func (m *UserLogin) validateFirstname(formats strfmt.Registry) error {

	if err := validate.Required("firstname", "body", m.Firstname); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user login based on context it is used
func (m *UserLogin) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserLogin) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserLogin) UnmarshalBinary(b []byte) error {
	var res UserLogin
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
