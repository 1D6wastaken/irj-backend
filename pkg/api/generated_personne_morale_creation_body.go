// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PersonneMoraleCreationBody personne morale creation body
//
// swagger:model PersonneMoraleCreationBody
type PersonneMoraleCreationBody struct {

	// Title of the monument lieu
	// Required: true
	Title *string `json:"title"`

	// centuries
	Centuries []int32 `json:"centuries"`

	// medias
	Medias []int32 `json:"medias"`

	// city
	City int32 `json:"city,omitempty"`

	// department
	Department int32 `json:"department,omitempty"`

	// region
	Region int32 `json:"region,omitempty"`

	// country
	Country int32 `json:"country,omitempty"`

	// themes
	Themes []int32 `json:"themes"`

	// contributors
	Contributors []string `json:"contributors"`

	// source
	Source string `json:"source,omitempty"`

	// simple mention
	SimpleMention bool `json:"simple_mention,omitempty"`

	// foundation deed
	FoundationDeed bool `json:"foundation_deed,omitempty"`

	// status text
	StatusText bool `json:"status_text,omitempty"`

	// functioning
	Functioning string `json:"functioning,omitempty"`

	// history
	History string `json:"history,omitempty"`

	// social involvement
	SocialInvolvement string `json:"social_involvement,omitempty"`

	// linked objects
	LinkedObjects string `json:"linked_objects,omitempty"`

	// bibliography
	Bibliography string `json:"bibliography,omitempty"`

	// natures
	Natures []int32 `json:"natures"`

	// comment
	Comment string `json:"comment,omitempty"`

	// linked monuments lieux
	LinkedMonumentsLieux []int32 `json:"linkedMonumentsLieux"`

	// linked mobiliers images
	LinkedMobiliersImages []int32 `json:"linkedMobiliersImages"`

	// linked pers physiques
	LinkedPersPhysiques []int32 `json:"linkedPersPhysiques"`
}

// Validate validates this personne morale creation body
func (m *PersonneMoraleCreationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PersonneMoraleCreationBody) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this personne morale creation body based on context it is used
func (m *PersonneMoraleCreationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PersonneMoraleCreationBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PersonneMoraleCreationBody) UnmarshalBinary(b []byte) error {
	var res PersonneMoraleCreationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
