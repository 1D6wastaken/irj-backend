// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostNewPwd post new pwd
//
// swagger:model PostNewPwd
type PostNewPwd struct {

	// Password of the user.
	// Must be at least 8 characters long and contain at least one number, one uppercase letter, one lowercase letter and one special character (!@#$%^&*()_+-=[]{};':"|,./?).
	// It should not be longer than 30 characters or 72 bytes (one character can be 1 to 4 bytes).
	//
	// Required: true
	// Max Length: 30
	// Min Length: 8
	Password *string `json:"password"`
}

// Validate validates this post new pwd
func (m *PostNewPwd) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostNewPwd) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("password", "body", m.Password); err != nil {
		return err
	}

	if err := validate.MinLength("password", "body", *m.Password, 8); err != nil {
		return err
	}

	if err := validate.MaxLength("password", "body", *m.Password, 30); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this post new pwd based on context it is used
func (m *PostNewPwd) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PostNewPwd) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostNewPwd) UnmarshalBinary(b []byte) error {
	var res PostNewPwd
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
